plugins {
    id 'fabric-loom' version '1.6-SNAPSHOT'
    id 'maven-publish'
}

version = project.mod_version
group = project.maven_group

loom {
    accessWidenerPath = file("src/main/resources/panorama.accesswidener")
}

dependencies {
    minecraft "com.mojang:minecraft:${project.minecraft_version}"
    mappings "net.fabricmc:yarn:${project.yarn_mappings}:v2"

    modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"
    modImplementation "net.fabricmc.fabric-api:fabric-api:${project.fabric_version}"
}

processResources {
    filteringCharset "UTF-8"

    filesMatching("fabric.mod.json") {
        expand project.properties
    }

    outputs.upToDateWhen {
        false
    }
}


// INB4 Moyang changes the versioning scheme
int indexMajor = minecraft_version.indexOf(".");
int indexMinor = minecraft_version.indexOf(".", indexMajor + 1);
int major = Integer.parseInt(minecraft_version.substring(indexMajor + 1, indexMinor))
int minor = indexMinor < 0 ? 0 : Integer.parseInt(minecraft_version.substring(indexMinor + 1))
def targetJavaVersion = 8
if (major == 17) targetJavaVersion 16
else if (major == 18 || major == 19) targetJavaVersion = 17
else if (major == 20) {
    if (minor == 5 || minor == 6)
        targetJavaVersion = 21
    else targetJavaVersion = 17
}

// thanks a lot groovy
/* switch (major) {
    case 17 -> 16
    case 18, 19 -> 17
    case 20 -> switch(minor) {
        case 5, 6 -> 21
        default -> 17
    }
    default -> 8
} */


tasks.withType(JavaCompile).configureEach {
    it.options.encoding = "UTF-8"
    if (targetJavaVersion >= 10 || JavaVersion.current().isJava10Compatible()) {
        it.options.release = targetJavaVersion
    }
}

java {
    def javaVersion = JavaVersion.toVersion(targetJavaVersion)
    if (JavaVersion.current() < javaVersion) {
        toolchain.languageVersion = JavaLanguageVersion.of(targetJavaVersion)
    }
    archivesBaseName = project.archives_base_name + "-m" + minecraft_version
    withSourcesJar()
}

jar {
    from("LICENSE") {
        rename { "${it}_${project.archivesBaseName}" }
    }
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            from components.java
        }
    }
}
